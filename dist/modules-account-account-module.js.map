{"version":3,"sources":["webpack:///./src/app/modules/account/account-routing.module.ts","webpack:///./src/app/modules/account/account.module.ts","webpack:///./src/app/modules/account/user-login/user-login.component.css","webpack:///./src/app/modules/account/user-login/user-login.component.html","webpack:///./src/app/modules/account/user-login/user-login.component.ts","webpack:///./src/app/shared/models/login-request.ts"],"names":[],"mappings":"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","file":"modules-account-account-module.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: UserLoginComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AccountRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { UserLoginComponent } from './user-login/user-login.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AccountRoutingModule } from './account-routing.module';\r\nimport { SharedModule } from '../../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SharedModule,\r\n    AccountRoutingModule\r\n  ],\r\n  declarations: [UserLoginComponent]\r\n})\r\nexport class AccountModule { }\r\n","module.exports = \".main-footer {\\r\\n    margin-left: 0px !important;\\r\\n  }\\r\\n\"","module.exports = \"<div class=\\\"login-box\\\">\\r\\n  <div class=\\\"login-logo\\\">\\r\\n    <a><b><img style=\\\"height: 100px;width: 100%;\\\" src=\\\"assets/images/dashboard.png\\\"></b></a>\\r\\n  </div>\\r\\n  <div class=\\\"login-box-body\\\">\\r\\n    <!-- <p class=\\\"login-box-msg\\\">Sign in to start your session</p> -->\\r\\n    <div class=\\\"alert alert-danger\\\" role=\\\"alert\\\" *ngIf=\\\"invaidUser\\\">\\r\\n      Your user name or password is incorrect!\\r\\n    </div>\\r\\n    <form novalidate #f=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit()\\\" [ngClass]=\\\"{\\r\\n      'was-validated': f.invalid && (f.dirty || f.touched),\\r\\n      'needs-validation': f.valid && (f.dirty || f.touched)\\r\\n    }\\\">\\r\\n      <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{\\r\\n        'is-invalid': userName.invalid && (userName.dirty || userName.touched),\\r\\n        'is-valid': userName.valid && (userName.dirty || userName.touched)\\r\\n      }\\\">\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"User Name\\\" autocomplete=\\\"off\\\" name=\\\"userName\\\" [(ngModel)]=\\\"model.UserId\\\"\\r\\n          #userName=\\\"ngModel\\\" required>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"userName.errors && (userName.dirty || userName.touched)\\\">\\r\\n          <p *ngIf=\\\"userName.errors.required\\\">User Name is required</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group has-feedback\\\" [ngClass]=\\\"{\\r\\n        'is-invalid': userName.invalid && (userName.dirty || userName.touched),\\r\\n        'is-valid': userName.valid && (userName.dirty || userName.touched)\\r\\n      }\\\">\\r\\n        <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"Password\\\" autocomplete=\\\"off\\\" name=\\\"password\\\"\\r\\n          [(ngModel)]=\\\"model.Password\\\" #password=\\\"ngModel\\\" required>\\r\\n        <div class=\\\"invalid-feedback\\\" *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\">\\r\\n          <p *ngIf=\\\"password.errors.required\\\">Password is required</p>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-12 text-center\\\">\\r\\n          <button type=\\\"submit\\\" class=\\\"btn btn-primary btn-block btn-flat\\\">Sign In</button>\\r\\n        </div>\\r\\n      </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\\r\\n<footer class=\\\"main-footer\\\" style=\\\"margin-left: 0px\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n      <div class=\\\"col-md-6\\\">\\r\\n        <a class=\\\"logo\\\">\\r\\n          <span class=\\\"logo-lg\\\"><b><img style=\\\"width: 60;height: 30px;margin-bottom: 4px;\\\" src=\\\"assets/images/dashboard.png\\\"></b></span>\\r\\n        </a>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 footer-copyright\\\">\\r\\n        <span><strong>Copyright &copy; 2018.</strong> All rights reserved.</span>\\r\\n      </div>\\r\\n    </div>\\r\\n  </footer>\\r\\n  \\r\\n\"","import {\r\n  Component,\r\n  OnInit,\r\n  OnDestroy,\r\n  ViewChild,\r\n  Renderer2\r\n} from '@angular/core';\r\nimport {\r\n  Router\r\n} from '@angular/router';\r\nimport {\r\n  Subscription\r\n} from 'rxjs';\r\n\r\nimport {\r\n  LoginRequest\r\n} from '../../../shared/models/login-request';\r\nimport {\r\n  AuthService\r\n} from '../../../shared/services/auth.service';\r\nimport {\r\n  DashboardService\r\n} from '../../../shared/services/dashboard.service';\r\nimport {\r\n  RestService\r\n} from 'src/app/shared/services/rest.service';\r\n\r\n@Component({\r\n  selector: 'app-user-login',\r\n  templateUrl: './user-login.component.html',\r\n  styleUrls: ['./user-login.component.css']\r\n})\r\nexport class UserLoginComponent implements OnInit, OnDestroy {\r\n  private subscriptions: Array < Subscription > = [];\r\n  model: LoginRequest = new LoginRequest();\r\n  invaidUser = false;\r\n\r\n  @ViewChild('f') form: any;\r\n\r\n  constructor(private authService: AuthService,\r\n    private service: RestService,\r\n    private router: Router, private renderer: Renderer2,\r\n    private dashboardService: DashboardService) {\r\n    this.renderer.addClass(document.body, 'hold-transition');\r\n    this.renderer.addClass(document.body, 'login-page');\r\n    this.authService.userDetails = null;\r\n    localStorage.clear()\r\n  }\r\n\r\n  ngOnInit() {\r\n   \r\n  }\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach(x => x.unsubscribe());\r\n    this.renderer.removeClass(document.body, 'login-page');\r\n  }\r\n\r\n\r\n  login(loginRequest: LoginRequest) {\r\n    //console.log(\"loginRequest\",loginRequest)\r\n    // {UserId: \"reapprover1\", Password: \"reapprover1\"}\r\n    this.dashboardService.showSpinner();\r\n    this.service.login(loginRequest)\r\n      .subscribe((res : any) => {\r\n        // console.log(\"responze login\",res/)\r\n       \r\n        if (res.status) {\r\n          // localStorage.setItem('token', res.token);\r\n         \r\n\r\n          let obj: any = {\r\n            Id: res.data.userId,\r\n            Name: res.data.userName,\r\n            Role: res.data.role,\r\n            Module: res.data.module\r\n          };\r\n          this.authService.userDetails = obj;\r\n        \r\n\r\n          // localStorage.setItem('user', JSON.stringify(this.userData));\r\n         console.log( localStorage.getItem('token'));\r\n\r\n          console.log(  localStorage.getItem('id'));\r\n\r\n          this.router.navigate(['home/dashboard']);\r\n          setTimeout(() => { //<<<---    using ()=> syntax\r\n           \r\n            \r\n\r\n          }, 6000);\r\n\r\n        } else {\r\n          this.dashboardService.hideSpinner();\r\n          this.invaidUser = true;\r\n        }\r\n\r\n      })\r\n\r\n\r\n    // if(loginRequest.UserId ==\"reapprover1\" && loginRequest.Password =='reapprover1')\r\n    // {\r\n    //   let obj:any={Id: 6, Name: \"RE Approver 1\", Role: \"RECO_APPROVER\", Module: \"RECO\"};\r\n\r\n    //   this.authService.userDetails = obj;\r\n    //   this.router.navigate(['home/dashboard']);\r\n    //   } else {\r\n    //     this.dashboardService.hideSpinner();\r\n    //     this.invaidUser = true;\r\n    //   }\r\n\r\n\r\n    // this.subscriptions.push(this.authService.login(loginRequest).subscribe((userDetails) => {\r\n    //   if (userDetails) {\r\n    //     //console.log(\"userdetails\",userDetails)\r\n    //     this.authService.userDetails = userDetails;\r\n    //     this.router.navigate(['home/dashboard']);\r\n    //   } else {\r\n    //     this.dashboardService.hideSpinner();\r\n    //     this.invaidUser = true;\r\n    //   }\r\n    // }));\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.form.valid) {\r\n      const loginRequest = < LoginRequest > {\r\n        UserId: this.form.controls.userName.value,\r\n        Password: this.form.controls.password.value\r\n      };\r\n      this.login(loginRequest);\r\n    }\r\n  }\r\n}\r\n","export class LoginRequest {\r\n    constructor(\r\n        public UserId: string = '',\r\n        public Password: string = '') {\r\n    }\r\n}\r\n\r\n"],"sourceRoot":""}